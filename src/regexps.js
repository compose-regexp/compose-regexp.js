//              /!\ DO NOT EDIT MANUALLY /!\


//   This file was generated by `scripts/build-regexp.js`
//   edit that file then run `npm run build` to regenerate it


//        /!\ DO NOT EDIT MANUALLY /!\

export {captureMatcher, dotMDotSMatcher, groupNameMatcher, loneBracketMatcher, mEndAnchor, mStartAnchor, numRefMatcher, oneEscapeOrCharClassMatcher, pEscapeMatcher, stringNormalizerMatcher, suffixMatcher, tokenMatcher, uProblemCharClassMatcher, uProblemDefaultMatcher}

/*
drop this in ./core.js when changing the list:
import {captureMatcher, dotMDotSMatcher, groupNameMatcher, loneBracketMatcher, mEndAnchor, mStartAnchor, numRefMatcher, oneEscapeOrCharClassMatcher, pEscapeMatcher, stringNormalizerMatcher, suffixMatcher, tokenMatcher, uProblemCharClassMatcher, uProblemDefaultMatcher} from './regexps.js'
*/

import {supportsU} from './utils.js'


const captureMatcher = /\\[^]|\(\?(?::|<?[=!])|[\[\](]/g


const dotMDotSMatcher = /\\.|\.|\(\?:\^\|\(\?<=\[\\n\\r\\u2028\\u2029\]\)\)|\(\?:\$\|\(\?=\[\\n\\r\\u2028\\u2029\]\)\)|\[|\]|\^|\$/g


const groupNameMatcher = supportsU && new RegExp("^[_$\\p{ID_Start}][$\\p{ID_Continue}]*$", 'u')


const loneBracketMatcher = /\\.|\{\d+(?:,\d*)?\}|(\[|\]|\{|\})/g


const mEndAnchor = /(?:$|(?=[\n\r\u2028\u2029]))/


const mStartAnchor = /(?:^|(?<=[\n\r\u2028\u2029]))/


const numRefMatcher = /\\[^1-9]|[\[\]]|\\(\d{1,2})|\$d:(\d+),n:(\d+)\^/g


const oneEscapeOrCharClassMatcher = /^(?:\\.|\[(?:[^\]\\]|\\.)*\])$/


const pEscapeMatcher = /^\\p\{[A-Za-z][A-Za-z=]*\}$/


const stringNormalizerMatcher = /[.?*+^$[\]\\(){}|]/g


const suffixMatcher = /^(?:[+*?]|\{(\d+)(?:,(\d*))?\})\??$/


const tokenMatcher = /(\\.)|[-()|\[\]]((?=\?<?[=!]))?/g


const uProblemCharClassMatcher = /\\u[0-9A-Fa-f]{4}|\\x[0-9A-Fa-f]{2}|\\c[A-Za-z]|\\([^.?*+^$[\]\\(){}|\/DSWdswfnrtv-])|(\\[DSWdsw]-[^\]]|.-\\[DSWdsw])|\\.|\]/g


const uProblemDefaultMatcher = /\\u[0-9A-Fa-f]{4}|\\x[0-9A-Fa-f]{2}|\\c[A-Za-z]|\\k<(.*?)>|\\([^.?*+^$[\]\\(){}|\/DSWdswBbfnrtv])|\\.|\.|\[\^\]|\[|(\((?:\?[^])?)|(\)(?:[+?*]|\{\d+,?\d*\})?)/g

